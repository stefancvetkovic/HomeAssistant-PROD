- id: Bathroom Lights On
  alias: Audio notification in bathroom when main light in bathroom is turned on
  trigger:
    - platform: state
      entity_id: switch.bathroom_light
      from:  'off'
      to:  'on'
  condition:
    - condition: time
      after: "07:00:00"
      before: "00:00:00"
  action:
  - service: script.turn_off
    entity_id: script.play_notification

  - service: script.turn_on
    entity_id: script.play_notification
    data:
      variables:
        speaker: "media_player.bathroom_ceiling_speaker"
        source: "Primary Chromecast"
        volume: "0.4"
        custom_message: "Dobro do≈°li u kupatilo."
        platform: "tts.cloud_say"

- alias: 'Bedroom Wardrobe Notification Based On Door Sensor'
  id: bedroom_wardrobe_notification_based_on_door_sensor
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.bedroom_wardrobe_left_door
        - binary_sensor.bedroom_wardrobe_right_door
      to: 'on'
      for: "00:05:00"
  action:
    - alias: Repeat the sequence UNTIL the conditions are true
      repeat:
        sequence:
          - service: script.turn_off
            entity_id: script.play_notification

          - service: script.turn_on
            entity_id: script.play_notification
            data:
              variables:
                speaker: "media_player.bedroom_ceiling_speaker"
                source: "Primary Chromecast"
                custom_message: "Please, close the wardrobe."
                volume: "0.4"
                platform: "tts.google_translate_say"

            #wait 3 minutes 
          - delay: 00:03:00
        until:
          # Did it work?
          - condition: state
            entity_id: 
            - binary_sensor.bedroom_wardrobe_left_door
            - binary_sensor.bedroom_wardrobe_right_door
            state: 'off'

- alias: 'Bathroom Notification Based On Humidity'
  id: bathroom_notification_clear_glass
  trigger:
    - platform: state
      entity_id: switch.bathroom_fan
      from: 'off'
      to: 'on'
  condition:
    - condition: numeric_state
      entity_id: sensor.bathroom_humidity
      above: 60
  action:
  - service: script.turn_off
    entity_id: script.play_notification

  - service: script.turn_on
    entity_id: script.play_notification
    data:
      variables:
        speaker: "media_player.bathroom_ceiling_speaker"
        source: "Primary Chromecast"
        volume: "0.4"
        custom_message: "Reminder: Please clean the glass after shower."
        platform: "tts.google_translate_say"

- alias: Google Calendar check events for today
  trigger:
  - platform: numeric_state
    below: '500'
    entity_id: sensor.google_ete
  # condition:
  #   condition: state
  #   entity_id: 'input_boolean.reminder_calendar'
  #   state: 'on'
  action:
    # - service: persistent_notification.create
    #   data:
    #     message: "In one hour, you have an event: {{state_attr('calendar.stefan_j_cvetkovic_gmail_com', 'message')}}"

    - service: script.turn_off
      entity_id: script.play_notification

    - service: script.turn_on
      entity_id: script.play_notification
      data:
        variables:
          speaker: "media_player.bedroom_ceiling_speaker"
          source: "Primary Chromecast"
          volume: "0.4"
          custom_message: "Reminder: In 10 minutes start next event: {{state_attr('calendar.stefan_j_cvetkovic_gmail_com', 'message')}}. Stay clean. Stay safe."
          platform: "tts.google_translate_say"

- alias: Announce temperture in the bedroom by scanned radiator tag
  description: ''
  trigger:
    - platform: tag
      tag_id: !secret bedroom_tag_radiator
  action:
  - service: script.turn_off
    entity_id: script.play_notification

  - service: script.turn_on
    entity_id: script.play_notification
    data:
      variables:
        speaker: "media_player.bedroom_ceiling_speaker"
        source: "Primary Chromecast"
        volume: "0.4"
        custom_message: "Current tempereture in the bedroom is {{ states('sensor.bedroom_temperature')}} degrees."
        platform: "tts.google_translate_say"